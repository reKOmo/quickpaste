name: Deploy

on:
  push:
    branches: [ "release" ]
  workflow_dispatch:
    inputs:
      logLevel:
        description: 'Log level'     
        required: true
        default: 'warning'

env:
 POSTGRES_USER: ${{ secrets.POSTGRES_USER }}
 POSTGRES_PASSWORD: ${{ secrets.POSTGRES_PASSWORD }}
 POSTGRES_HOST: ${{ secrets.POSTGRES_HOST }}
 POSTGRES_PORT: ${{ secrets.POSTGRES_PORT }}
 AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
 AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
 S3_REGION: ${{ secrets.S3_REGION }}
 S3_ENDPOINT: ${{ secrets.S3_ENDPOINT }}
 JWT_SECRET_KEY: ${{ secrets.JWT_SECRET_KEY }}
 WEB_DOMAIN_NAME: ${{ secrets.WEB_DOMAIN_NAME }}
 GITHUB_CLIENT_ID: ${{ secrets.GITHUB_CLIENT_ID }}
 GITHUB_CLIENT_SECRET: ${{ secrets.GITHUB_CLIENT_SECRET }}
 HELP_EMAIL: ${{ secrets.HELP_EMAIL }}

jobs:
  build:
    runs-on: [self-hosted, linux]
    strategy:
      matrix:
        node-version: [22.14.0]
    
    env:
      CI: true

    steps:
    - uses: actions/checkout@v4
    - uses: pnpm/action-setup@v4
    - name: Use Node.js ${{ matrix.node-version }}
      uses: actions/setup-node@v4
      with:
        node-version: ${{ matrix.node-version }}
        cache: 'pnpm'
    - name: Prepare for build
      run: make prod-prepare-build
    - name: Setup enviroment and install deps
      run: pnpm add -g yalc && pnpm add -g workspace-to-yalc && pnpm install --shamefully-hoist && mkdir -p /var/letsencrypt/challange && mkdir -p /var/letsencrypt/certs
    - name: Build docker images
      run: make prod-build
  run:
    runs-on: [self-hosted, linux]
    needs: [build]
    steps:
      - name: Start containers
        run: make prod-up
