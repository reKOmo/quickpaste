version: "3.9" # optional since v1.27.0
services:
  api:
    build:
      context: ./apps/api
      target: production
      dockerfile: Dockerfile
    command: npm run start
    environment:
      - POSTGRES_USER=${POSTGRES_USER}
      - POSTGRES_PASSWORD=${POSTGRES_PASSWORD}
      - PG_HOST=${POSTGRES_HOST}
      - PG_PORT=${POSTGRES_PORT}
      - PG_DB_NAME=quickpaste
      - AWS_ACCESS_KEY_ID=${AWS_ACCESS_KEY_ID}
      - AWS_SECRET_ACCESS_KEY=${AWS_SECRET_ACCESS_KEY}
      - AWS_BUCKET_NAME=quickpaste
      - AWS_REGION=${S3_REGION}
      - AWS_ENDPOINT=${S3_ENDPOINT}
      - NODE_ENV=production
  auth:
    build:
      context: ./apps/auth
      dockerfile: Dockerfile
      target: production
    command: npm run start
    environment:
      - POSTGRES_USER=${POSTGRES_USER}
      - POSTGRES_PASSWORD=${POSTGRES_PASSWORD}
      - JWT_SECRET_KEY=${JWT_SECRET_KEY}
      - PG_HOST=${POSTGRES_HOST}
      - PG_PORT=${POSTGRES_PORT}
      - PG_DB_NAME=quickpaste
      - NODE_ENV=production
  web:
    build:
      context: ./apps/web
      dockerfile: Dockerfile
      target: production
    command: npm run start
    volumes:
      - ./.yalc-store:/yalc:rw
    environment:
      - NUXT_HOST=0
      - NUXT_PORT=3000
      - NUXT_INTERNAL_GATEWAY_ADDRESS=https://gateway:443
      - NUXT_INTERNAL_API_ADDRESS=http://api:3000
      - NUXT_AUTH_SERVICE_ADDRESS=http://auth:3000
      - NUXT_WEB_ADDRESS=https://${WEB_DOMAIN_NAME}
      - NUXT_PUBLIC_WEB_ADDRESS=https://${WEB_DOMAIN_NAME}
      - NUXT_GITHUB_CLIENT_ID=${GITHUB_CLIENT_ID}
      - NUXT_PUBLIC_GITHUB_CLIENT_ID=${GITHUB_CLIENT_ID}
      - NUXT_GITHUB_CLIENT_SECRET=${GITHUB_CLIENT_SECRET}
      - NUXT_API_PATH=/api
      - NODE_ENV="production"
  gateway:
    build:
      context: ./apps/gateway
      dockerfile: Dockerfile
      target: production
    volumes:
      - /var/letsencrypt/certs:/etc/letsencrypt/
      - /var/letsencrypt/challange:/usr/share/certbot:rw
    environment:
      - DOMAIN_NAME=${WEB_DOMAIN_NAME}
    ports:
      - "80:80"
      - "443:443"
    depends_on:
      - api
      - auth
    networks:
      default:
        aliases:
          - gateway
          - ${WEB_DOMAIN_NAME}
  maintainer:
    build:
      context: ./apps/maintainer
      dockerfile: Dockerfile
    depends_on:
      - api
      - gateway
    volumes:
      - /var/letsencrypt/certs:/etc/letsencrypt:rw
      - /var/letsencrypt/challange:/usr/share/certbot:rw
    environment:
      - DOMAIN_NAME=${WEB_DOMAIN_NAME}
      - EMAIL=${HELP_EMAIL}
