version: "3.9" # optional since v1.27.0
services:
  api:
    build:
      context: ./apps/api
      dockerfile: Dockerfile
      target: dev
    ports:
      - "${API_PORT}:3000"
    command: npm run dev
    volumes:
      - ./.yalc-store:/yalc:rw
      - ./apps/api/src:/home/app/src:rw
    env_file:
      - ./apps/api/dev.env
    environment:
      - POSTGRES_USER=${POSTGRES_USER}
      - POSTGRES_PASSWORD=${POSTGRES_PASSWORD}
    depends_on:
      - storage
      - db
  auth:
    build:
      context: ./apps/auth
      dockerfile: Dockerfile
      target: dev
    ports:
      - "${AUTH_PORT}:3000"
    command: npm run dev
    volumes:
      - ./.yalc-store:/yalc:rw
      - ./apps/auth/src:/home/app/src:rw
    env_file:
      - ./apps/auth/dev.env
    environment:
      - POSTGRES_USER=${POSTGRES_USER}
      - POSTGRES_PASSWORD=${POSTGRES_PASSWORD}
    depends_on:
      - db
  storage:
    image: localstack/localstack
    ports:
      - "4566:4566"
    environment:
      - SERVICES=s3
      - DEBUG=1
      - DATA_DIR=/tmp/localstack/data
    volumes:
      - ${LOCAL_DEV_STORAGE}:/tmp/localstack
      - //var/run/docker.sock:/var/run/docker.sock
  db:
    image: postgres:14.3-alpine
    environment:
      - POSTGRES_USER=${POSTGRES_USER}
      - POSTGRES_PASSWORD=${POSTGRES_PASSWORD}
    ports:
      - '5500:5432'
    volumes:
      - ${LOCAL_DEV_DB}:/var/lib/postgresql/data
      - ./apps/db/init.sql:/docker-entrypoint-initdb.d/create_tables.sql
  gateway:
    build:
      context: ./apps/gateway
      dockerfile: Dockerfile
      target: dev
    ports:
      - "${GATEWAY_PORT}:80"
    depends_on:
      - api
      - auth
